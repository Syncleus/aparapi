<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_09) on Wed Nov 28 10:52:04 PST 2012 -->
<title>B-Index</title>
<meta name="date" content="2012-11-28">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="B-Index";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li>Use</li>
<li><a href="../overview-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-1.html">Prev Letter</a></li>
<li><a href="index-3.html">Next Letter</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-filesindex-2.html" target="_top">Frames</a></li>
<li><a href="index-2.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="contentContainer"><a href="index-1.html">A</a>&nbsp;<a href="index-2.html">B</a>&nbsp;<a href="index-3.html">C</a>&nbsp;<a href="index-4.html">D</a>&nbsp;<a href="index-5.html">E</a>&nbsp;<a href="index-6.html">F</a>&nbsp;<a href="index-7.html">G</a>&nbsp;<a href="index-8.html">H</a>&nbsp;<a href="index-9.html">I</a>&nbsp;<a href="index-10.html">J</a>&nbsp;<a href="index-11.html">K</a>&nbsp;<a href="index-12.html">L</a>&nbsp;<a href="index-13.html">M</a>&nbsp;<a href="index-14.html">N</a>&nbsp;<a href="index-15.html">O</a>&nbsp;<a href="index-16.html">P</a>&nbsp;<a href="index-17.html">R</a>&nbsp;<a href="index-18.html">S</a>&nbsp;<a href="index-19.html">T</a>&nbsp;<a href="index-20.html">U</a>&nbsp;<a href="index-21.html">V</a>&nbsp;<a href="index-22.html">W</a>&nbsp;<a href="index-23.html">_</a>&nbsp;<a name="_B_">
<!--   -->
</a>
<h2 class="title">B</h2>
<dl>
<dt><span class="strong"><a href="../com/amd/aparapi/opencl/OpenCL.html#begin()">begin()</a></span> - Method in interface com.amd.aparapi.opencl.<a href="../com/amd/aparapi/opencl/OpenCL.html" title="interface in com.amd.aparapi.opencl">OpenCL</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/opencl/OpenCLAdapter.html#begin()">begin()</a></span> - Method in class com.amd.aparapi.opencl.<a href="../com/amd/aparapi/opencl/OpenCLAdapter.html" title="class in com.amd.aparapi.opencl">OpenCLAdapter</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/device/Device.html#best()">best()</a></span> - Static method in class com.amd.aparapi.device.<a href="../com/amd/aparapi/device/Device.html" title="class in com.amd.aparapi.device">Device</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/device/OpenCLDevice.html#bind(java.lang.Class, java.io.InputStream)">bind(Class&lt;T&gt;, InputStream)</a></span> - Method in class com.amd.aparapi.device.<a href="../com/amd/aparapi/device/OpenCLDevice.html" title="class in com.amd.aparapi.device">OpenCLDevice</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/device/OpenCLDevice.html#bind(java.lang.Class)">bind(Class&lt;T&gt;)</a></span> - Method in class com.amd.aparapi.device.<a href="../com/amd/aparapi/device/OpenCLDevice.html" title="class in com.amd.aparapi.device">OpenCLDevice</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/device/OpenCLDevice.html#bind(java.lang.Class, java.lang.String)">bind(Class&lt;T&gt;, String)</a></span> - Method in class com.amd.aparapi.device.<a href="../com/amd/aparapi/device/OpenCLDevice.html" title="class in com.amd.aparapi.device">OpenCLDevice</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/internal/model/ClassModel.Access.html#bitIsSet(int)">bitIsSet(int)</a></span> - Method in enum com.amd.aparapi.internal.model.<a href="../com/amd/aparapi/internal/model/ClassModel.Access.html" title="enum in com.amd.aparapi.internal.model">ClassModel.Access</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/internal/opencl/OpenCLArgDescriptor.html#bits">bits</a></span> - Variable in class com.amd.aparapi.internal.opencl.<a href="../com/amd/aparapi/internal/opencl/OpenCLArgDescriptor.html" title="class in com.amd.aparapi.internal.opencl">OpenCLArgDescriptor</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../com/amd/aparapi/internal/writer/BlockWriter.html" title="class in com.amd.aparapi.internal.writer"><span class="strong">BlockWriter</span></a> - Class in <a href="../com/amd/aparapi/internal/writer/package-summary.html">com.amd.aparapi.internal.writer</a></dt>
<dd>
<div class="block">Base abstract class for converting <code>Aparapi</code> IR to text.<br/></div>
</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/internal/writer/BlockWriter.html#BlockWriter()">BlockWriter()</a></span> - Constructor for class com.amd.aparapi.internal.writer.<a href="../com/amd/aparapi/internal/writer/BlockWriter.html" title="class in com.amd.aparapi.internal.writer">BlockWriter</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/internal/tool/InstructionHelper.BranchVector.html#BOTTOM_ARROW">BOTTOM_ARROW</a></span> - Static variable in class com.amd.aparapi.internal.tool.<a href="../com/amd/aparapi/internal/tool/InstructionHelper.BranchVector.html" title="class in com.amd.aparapi.internal.tool">InstructionHelper.BranchVector</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../com/amd/aparapi/internal/instruction/BranchSet.html" title="class in com.amd.aparapi.internal.instruction"><span class="strong">BranchSet</span></a> - Class in <a href="../com/amd/aparapi/internal/instruction/package-summary.html">com.amd.aparapi.internal.instruction</a></dt>
<dd>
<div class="block">Deals with the issue of recognizing that a sequence of bytecode branch instructions actually represent a single if/while with a logical expression.</div>
</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/internal/instruction/BranchSet.html#BranchSet(com.amd.aparapi.internal.instruction.InstructionSet.Branch)">BranchSet(InstructionSet.Branch)</a></span> - Constructor for class com.amd.aparapi.internal.instruction.<a href="../com/amd/aparapi/internal/instruction/BranchSet.html" title="class in com.amd.aparapi.internal.instruction">BranchSet</a></dt>
<dd>
<div class="block">We construct a branch set with the 'last' branch.</div>
</dd>
<dt><a href="../com/amd/aparapi/internal/instruction/BranchSet.CompoundLogicalExpressionNode.html" title="class in com.amd.aparapi.internal.instruction"><span class="strong">BranchSet.CompoundLogicalExpressionNode</span></a> - Class in <a href="../com/amd/aparapi/internal/instruction/package-summary.html">com.amd.aparapi.internal.instruction</a></dt>
<dd>
<div class="block">A node in the expression tree representing a simple logical expression.</div>
</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/internal/instruction/BranchSet.CompoundLogicalExpressionNode.html#BranchSet.CompoundLogicalExpressionNode(boolean, com.amd.aparapi.internal.instruction.BranchSet.LogicalExpressionNode, com.amd.aparapi.internal.instruction.BranchSet.LogicalExpressionNode)">BranchSet.CompoundLogicalExpressionNode(boolean, BranchSet.LogicalExpressionNode, BranchSet.LogicalExpressionNode)</a></span> - Constructor for class com.amd.aparapi.internal.instruction.<a href="../com/amd/aparapi/internal/instruction/BranchSet.CompoundLogicalExpressionNode.html" title="class in com.amd.aparapi.internal.instruction">BranchSet.CompoundLogicalExpressionNode</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../com/amd/aparapi/internal/instruction/BranchSet.LogicalExpressionNode.html" title="class in com.amd.aparapi.internal.instruction"><span class="strong">BranchSet.LogicalExpressionNode</span></a> - Class in <a href="../com/amd/aparapi/internal/instruction/package-summary.html">com.amd.aparapi.internal.instruction</a></dt>
<dd>
<div class="block">Base abstract class used to hold information used to construct node tree for logical expressions.</div>
</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/internal/instruction/BranchSet.LogicalExpressionNode.html#BranchSet.LogicalExpressionNode()">BranchSet.LogicalExpressionNode()</a></span> - Constructor for class com.amd.aparapi.internal.instruction.<a href="../com/amd/aparapi/internal/instruction/BranchSet.LogicalExpressionNode.html" title="class in com.amd.aparapi.internal.instruction">BranchSet.LogicalExpressionNode</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../com/amd/aparapi/internal/instruction/BranchSet.SimpleLogicalExpressionNode.html" title="class in com.amd.aparapi.internal.instruction"><span class="strong">BranchSet.SimpleLogicalExpressionNode</span></a> - Class in <a href="../com/amd/aparapi/internal/instruction/package-summary.html">com.amd.aparapi.internal.instruction</a></dt>
<dd>
<div class="block">A node in the expression tree representing a simple logical expression.</div>
</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/internal/instruction/BranchSet.SimpleLogicalExpressionNode.html#BranchSet.SimpleLogicalExpressionNode(com.amd.aparapi.internal.instruction.InstructionSet.ConditionalBranch)">BranchSet.SimpleLogicalExpressionNode(InstructionSet.ConditionalBranch)</a></span> - Constructor for class com.amd.aparapi.internal.instruction.<a href="../com/amd/aparapi/internal/instruction/BranchSet.SimpleLogicalExpressionNode.html" title="class in com.amd.aparapi.internal.instruction">BranchSet.SimpleLogicalExpressionNode</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/internal/tool/InstructionViewer.InstructionView.html#branchTarget">branchTarget</a></span> - Variable in class com.amd.aparapi.internal.tool.<a href="../com/amd/aparapi/internal/tool/InstructionViewer.InstructionView.html" title="class in com.amd.aparapi.internal.tool">InstructionViewer.InstructionView</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/internal/model/MethodModel.html#buildBranchGraphs(java.util.Map)">buildBranchGraphs(Map&lt;Integer, Instruction&gt;)</a></span> - Method in class com.amd.aparapi.internal.model.<a href="../com/amd/aparapi/internal/model/MethodModel.html" title="class in com.amd.aparapi.internal.model">MethodModel</a></dt>
<dd>
<div class="block">Here we connect the branch nodes to the instruction that they branch to.</div>
</dd>
<dt><a href="../com/amd/aparapi/internal/reader/ByteBuffer.html" title="class in com.amd.aparapi.internal.reader"><span class="strong">ByteBuffer</span></a> - Class in <a href="../com/amd/aparapi/internal/reader/package-summary.html">com.amd.aparapi.internal.reader</a></dt>
<dd>
<div class="block">Used to parse ClassFile structure.</div>
</dd>
<dt><a href="../com/amd/aparapi/internal/reader/ByteReader.html" title="class in com.amd.aparapi.internal.reader"><span class="strong">ByteReader</span></a> - Class in <a href="../com/amd/aparapi/internal/reader/package-summary.html">com.amd.aparapi.internal.reader</a></dt>
<dd>
<div class="block">Primarily used to parse various ClassFile structures.</div>
</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/internal/reader/ByteReader.html#ByteReader(com.amd.aparapi.internal.reader.ByteBuffer)">ByteReader(ByteBuffer)</a></span> - Constructor for class com.amd.aparapi.internal.reader.<a href="../com/amd/aparapi/internal/reader/ByteReader.html" title="class in com.amd.aparapi.internal.reader">ByteReader</a></dt>
<dd>
<div class="block">Construct form a given ByteBuffer.</div>
</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/internal/reader/ByteReader.html#ByteReader(byte[])">ByteReader(byte[])</a></span> - Constructor for class com.amd.aparapi.internal.reader.<a href="../com/amd/aparapi/internal/reader/ByteReader.html" title="class in com.amd.aparapi.internal.reader">ByteReader</a></dt>
<dd>
<div class="block">Construct form an array of bytes.</div>
</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/internal/reader/ByteReader.html#ByteReader(java.io.InputStream)">ByteReader(InputStream)</a></span> - Constructor for class com.amd.aparapi.internal.reader.<a href="../com/amd/aparapi/internal/reader/ByteReader.html" title="class in com.amd.aparapi.internal.reader">ByteReader</a></dt>
<dd>
<div class="block">Construct form an input stream (say a ClassFile).</div>
</dd>
<dt><span class="strong"><a href="../com/amd/aparapi/internal/reader/ByteReader.html#bytes(int)">bytes(int)</a></span> - Method in class com.amd.aparapi.internal.reader.<a href="../com/amd/aparapi/internal/reader/ByteReader.html" title="class in com.amd.aparapi.internal.reader">ByteReader</a></dt>
<dd>&nbsp;</dd>
</dl>
<a href="index-1.html">A</a>&nbsp;<a href="index-2.html">B</a>&nbsp;<a href="index-3.html">C</a>&nbsp;<a href="index-4.html">D</a>&nbsp;<a href="index-5.html">E</a>&nbsp;<a href="index-6.html">F</a>&nbsp;<a href="index-7.html">G</a>&nbsp;<a href="index-8.html">H</a>&nbsp;<a href="index-9.html">I</a>&nbsp;<a href="index-10.html">J</a>&nbsp;<a href="index-11.html">K</a>&nbsp;<a href="index-12.html">L</a>&nbsp;<a href="index-13.html">M</a>&nbsp;<a href="index-14.html">N</a>&nbsp;<a href="index-15.html">O</a>&nbsp;<a href="index-16.html">P</a>&nbsp;<a href="index-17.html">R</a>&nbsp;<a href="index-18.html">S</a>&nbsp;<a href="index-19.html">T</a>&nbsp;<a href="index-20.html">U</a>&nbsp;<a href="index-21.html">V</a>&nbsp;<a href="index-22.html">W</a>&nbsp;<a href="index-23.html">_</a>&nbsp;</div>
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li>Use</li>
<li><a href="../overview-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-1.html">Prev Letter</a></li>
<li><a href="index-3.html">Next Letter</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-filesindex-2.html" target="_top">Frames</a></li>
<li><a href="index-2.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
