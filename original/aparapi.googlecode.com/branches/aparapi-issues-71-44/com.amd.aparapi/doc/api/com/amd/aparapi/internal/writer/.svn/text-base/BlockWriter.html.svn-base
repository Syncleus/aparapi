<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_09) on Wed Nov 28 10:52:01 PST 2012 -->
<title>BlockWriter</title>
<meta name="date" content="2012-11-28">
<link rel="stylesheet" type="text/css" href="../../../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="BlockWriter";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/BlockWriter.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="../../../../../com/amd/aparapi/internal/writer/KernelWriter.html" title="class in com.amd.aparapi.internal.writer"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?com/amd/aparapi/internal/writer/BlockWriter.html" target="_top">Frames</a></li>
<li><a href="BlockWriter.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.amd.aparapi.internal.writer</div>
<h2 title="Class BlockWriter" class="title">Class BlockWriter</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>com.amd.aparapi.internal.writer.BlockWriter</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../../../../../com/amd/aparapi/internal/tool/InstructionHelper.StringWriter.html" title="class in com.amd.aparapi.internal.tool">InstructionHelper.StringWriter</a>, <a href="../../../../../com/amd/aparapi/internal/writer/KernelWriter.html" title="class in com.amd.aparapi.internal.writer">KernelWriter</a></dd>
</dl>
<hr>
<br>
<pre>public abstract class <span class="strong">BlockWriter</span>
extends java.lang.Object</pre>
<div class="block">Base abstract class for converting <code>Aparapi</code> IR to text.<br/></div>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>gfrost</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#arrayLengthMangleSuffix">arrayLengthMangleSuffix</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#indent">indent</a></strong></code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#BlockWriter()">BlockWriter</a></strong>()</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#convertCast(java.lang.String)">convertCast</a></strong>(java.lang.String&nbsp;_cast)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#convertType(java.lang.String, boolean)">convertType</a></strong>(java.lang.String&nbsp;_typeDesc,
           boolean&nbsp;useClassModel)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#in()">in</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#newLine()">newLine</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#out()">out</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#write(com.amd.aparapi.internal.instruction.BranchSet.LogicalExpressionNode)">write</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/BranchSet.LogicalExpressionNode.html" title="class in com.amd.aparapi.internal.instruction">BranchSet.LogicalExpressionNode</a>&nbsp;_node)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>abstract void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#write(com.amd.aparapi.internal.model.Entrypoint)">write</a></strong>(<a href="../../../../../com/amd/aparapi/internal/model/Entrypoint.html" title="class in com.amd.aparapi.internal.model">Entrypoint</a>&nbsp;entryPoint)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>abstract void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#write(java.lang.String)">write</a></strong>(java.lang.String&nbsp;_string)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#writeBlock(com.amd.aparapi.internal.instruction.Instruction, com.amd.aparapi.internal.instruction.Instruction)">writeBlock</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_first,
          <a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_last)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#writeComposite(com.amd.aparapi.internal.instruction.InstructionSet.CompositeInstruction)">writeComposite</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.CompositeInstruction.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.CompositeInstruction</a>&nbsp;instruction)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#writeConditional(com.amd.aparapi.internal.instruction.BranchSet)">writeConditional</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/BranchSet.html" title="class in com.amd.aparapi.internal.instruction">BranchSet</a>&nbsp;_branchSet)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#writeConditional(com.amd.aparapi.internal.instruction.BranchSet, boolean)">writeConditional</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/BranchSet.html" title="class in com.amd.aparapi.internal.instruction">BranchSet</a>&nbsp;_branchSet,
                boolean&nbsp;_invert)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#writeConditionalBranch16(com.amd.aparapi.internal.instruction.InstructionSet.ConditionalBranch16, boolean)">writeConditionalBranch16</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.ConditionalBranch16.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.ConditionalBranch16</a>&nbsp;_branch16,
                        boolean&nbsp;_invert)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#writeInstruction(com.amd.aparapi.internal.instruction.Instruction)">writeInstruction</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_instruction)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#writeln(java.lang.String)">writeln</a></strong>(java.lang.String&nbsp;_string)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#writeMethod(com.amd.aparapi.internal.instruction.InstructionSet.MethodCall, com.amd.aparapi.internal.model.ClassModel.ConstantPool.MethodEntry)">writeMethod</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.MethodCall.html" title="interface in com.amd.aparapi.internal.instruction">InstructionSet.MethodCall</a>&nbsp;_methodCall,
           <a href="../../../../../com/amd/aparapi/internal/model/ClassModel.ConstantPool.MethodEntry.html" title="class in com.amd.aparapi.internal.model">ClassModel.ConstantPool.MethodEntry</a>&nbsp;_methodEntry)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#writeMethodBody(com.amd.aparapi.internal.model.MethodModel)">writeMethodBody</a></strong>(<a href="../../../../../com/amd/aparapi/internal/model/MethodModel.html" title="class in com.amd.aparapi.internal.model">MethodModel</a>&nbsp;_methodModel)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#writeSequence(com.amd.aparapi.internal.instruction.Instruction, com.amd.aparapi.internal.instruction.Instruction)">writeSequence</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_first,
             <a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_last)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/writer/BlockWriter.html#writeThisRef()">writeThisRef</a></strong>()</code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="arrayLengthMangleSuffix">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>arrayLengthMangleSuffix</h4>
<pre>public static final&nbsp;java.lang.String arrayLengthMangleSuffix</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../../../constant-values.html#com.amd.aparapi.internal.writer.BlockWriter.arrayLengthMangleSuffix">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="indent">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>indent</h4>
<pre>public&nbsp;int indent</pre>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="BlockWriter()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>BlockWriter</h4>
<pre>public&nbsp;BlockWriter()</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="write(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>write</h4>
<pre>public abstract&nbsp;void&nbsp;write(java.lang.String&nbsp;_string)</pre>
</li>
</ul>
<a name="writeln(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeln</h4>
<pre>public&nbsp;void&nbsp;writeln(java.lang.String&nbsp;_string)</pre>
</li>
</ul>
<a name="in()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>in</h4>
<pre>public&nbsp;void&nbsp;in()</pre>
</li>
</ul>
<a name="out()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>out</h4>
<pre>public&nbsp;void&nbsp;out()</pre>
</li>
</ul>
<a name="newLine()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>newLine</h4>
<pre>public&nbsp;void&nbsp;newLine()</pre>
</li>
</ul>
<a name="writeConditionalBranch16(com.amd.aparapi.internal.instruction.InstructionSet.ConditionalBranch16, boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeConditionalBranch16</h4>
<pre>public&nbsp;void&nbsp;writeConditionalBranch16(<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.ConditionalBranch16.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.ConditionalBranch16</a>&nbsp;_branch16,
                            boolean&nbsp;_invert)
                              throws <a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></pre>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></code></dd></dl>
</li>
</ul>
<a name="writeComposite(com.amd.aparapi.internal.instruction.InstructionSet.CompositeInstruction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeComposite</h4>
<pre>public&nbsp;void&nbsp;writeComposite(<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.CompositeInstruction.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.CompositeInstruction</a>&nbsp;instruction)
                    throws <a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></pre>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></code></dd></dl>
</li>
</ul>
<a name="writeSequence(com.amd.aparapi.internal.instruction.Instruction, com.amd.aparapi.internal.instruction.Instruction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeSequence</h4>
<pre>public&nbsp;void&nbsp;writeSequence(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_first,
                 <a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_last)
                   throws <a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></pre>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></code></dd></dl>
</li>
</ul>
<a name="writeBlock(com.amd.aparapi.internal.instruction.Instruction, com.amd.aparapi.internal.instruction.Instruction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeBlock</h4>
<pre>public&nbsp;void&nbsp;writeBlock(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_first,
              <a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_last)
                throws <a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></pre>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></code></dd></dl>
</li>
</ul>
<a name="writeConditional(com.amd.aparapi.internal.instruction.BranchSet)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeConditional</h4>
<pre>public&nbsp;<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;writeConditional(<a href="../../../../../com/amd/aparapi/internal/instruction/BranchSet.html" title="class in com.amd.aparapi.internal.instruction">BranchSet</a>&nbsp;_branchSet)
                             throws <a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></pre>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></code></dd></dl>
</li>
</ul>
<a name="writeConditional(com.amd.aparapi.internal.instruction.BranchSet, boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeConditional</h4>
<pre>public&nbsp;<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;writeConditional(<a href="../../../../../com/amd/aparapi/internal/instruction/BranchSet.html" title="class in com.amd.aparapi.internal.instruction">BranchSet</a>&nbsp;_branchSet,
                           boolean&nbsp;_invert)
                             throws <a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></pre>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></code></dd></dl>
</li>
</ul>
<a name="write(com.amd.aparapi.internal.instruction.BranchSet.LogicalExpressionNode)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>write</h4>
<pre>public&nbsp;void&nbsp;write(<a href="../../../../../com/amd/aparapi/internal/instruction/BranchSet.LogicalExpressionNode.html" title="class in com.amd.aparapi.internal.instruction">BranchSet.LogicalExpressionNode</a>&nbsp;_node)
           throws <a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></pre>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></code></dd></dl>
</li>
</ul>
<a name="convertType(java.lang.String, boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>convertType</h4>
<pre>public&nbsp;java.lang.String&nbsp;convertType(java.lang.String&nbsp;_typeDesc,
                           boolean&nbsp;useClassModel)</pre>
</li>
</ul>
<a name="convertCast(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>convertCast</h4>
<pre>public&nbsp;java.lang.String&nbsp;convertCast(java.lang.String&nbsp;_cast)</pre>
</li>
</ul>
<a name="writeInstruction(com.amd.aparapi.internal.instruction.Instruction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeInstruction</h4>
<pre>public&nbsp;void&nbsp;writeInstruction(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_instruction)
                      throws <a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></pre>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></code></dd></dl>
</li>
</ul>
<a name="writeMethod(com.amd.aparapi.internal.instruction.InstructionSet.MethodCall, com.amd.aparapi.internal.model.ClassModel.ConstantPool.MethodEntry)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeMethod</h4>
<pre>public&nbsp;void&nbsp;writeMethod(<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.MethodCall.html" title="interface in com.amd.aparapi.internal.instruction">InstructionSet.MethodCall</a>&nbsp;_methodCall,
               <a href="../../../../../com/amd/aparapi/internal/model/ClassModel.ConstantPool.MethodEntry.html" title="class in com.amd.aparapi.internal.model">ClassModel.ConstantPool.MethodEntry</a>&nbsp;_methodEntry)
                 throws <a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></pre>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></code></dd></dl>
</li>
</ul>
<a name="writeThisRef()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeThisRef</h4>
<pre>public&nbsp;void&nbsp;writeThisRef()</pre>
</li>
</ul>
<a name="writeMethodBody(com.amd.aparapi.internal.model.MethodModel)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>writeMethodBody</h4>
<pre>public&nbsp;void&nbsp;writeMethodBody(<a href="../../../../../com/amd/aparapi/internal/model/MethodModel.html" title="class in com.amd.aparapi.internal.model">MethodModel</a>&nbsp;_methodModel)
                     throws <a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></pre>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></code></dd></dl>
</li>
</ul>
<a name="write(com.amd.aparapi.internal.model.Entrypoint)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>write</h4>
<pre>public abstract&nbsp;void&nbsp;write(<a href="../../../../../com/amd/aparapi/internal/model/Entrypoint.html" title="class in com.amd.aparapi.internal.model">Entrypoint</a>&nbsp;entryPoint)
                    throws <a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></pre>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../../../com/amd/aparapi/internal/exception/CodeGenException.html" title="class in com.amd.aparapi.internal.exception">CodeGenException</a></code></dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/BlockWriter.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="../../../../../com/amd/aparapi/internal/writer/KernelWriter.html" title="class in com.amd.aparapi.internal.writer"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?com/amd/aparapi/internal/writer/BlockWriter.html" target="_top">Frames</a></li>
<li><a href="BlockWriter.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
