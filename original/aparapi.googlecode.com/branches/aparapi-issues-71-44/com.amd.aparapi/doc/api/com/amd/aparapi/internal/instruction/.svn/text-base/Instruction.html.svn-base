<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_09) on Wed Nov 28 10:51:58 PST 2012 -->
<title>Instruction</title>
<meta name="date" content="2012-11-28">
<link rel="stylesheet" type="text/css" href="../../../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Instruction";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Instruction.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../../com/amd/aparapi/internal/instruction/ExpressionList.html" title="class in com.amd.aparapi.internal.instruction"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../../../com/amd/aparapi/internal/instruction/InstructionPattern.html" title="class in com.amd.aparapi.internal.instruction"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?com/amd/aparapi/internal/instruction/Instruction.html" target="_top">Frames</a></li>
<li><a href="Instruction.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.amd.aparapi.internal.instruction</div>
<h2 title="Class Instruction" class="title">Class Instruction</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>com.amd.aparapi.internal.instruction.Instruction</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.ArrayAccess.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.ArrayAccess</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.Branch.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.Branch</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.BytecodeEncodedConstant.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.BytecodeEncodedConstant</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.CloneInstruction.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.CloneInstruction</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.CompositeInstruction.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.CompositeInstruction</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.DUP.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.DUP</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.FieldArrayElementAssign.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.FieldArrayElementAssign</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.FieldArrayElementIncrement.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.FieldArrayElementIncrement</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.I_ACONST_NULL.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.I_ACONST_NULL</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.I_ARRAYLENGTH.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.I_ARRAYLENGTH</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.I_ATHROW.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.I_ATHROW</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.I_DCMPG.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.I_DCMPG</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.I_DCMPL.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.I_DCMPL</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.I_END.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.I_END</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.I_MONITORENTER.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.I_MONITORENTER</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.I_MONITOREXIT.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.I_MONITOREXIT</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.I_NEWARRAY.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.I_NEWARRAY</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.I_NOP.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.I_NOP</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.I_POP.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.I_POP</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.I_POP2.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.I_POP2</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.I_SWAP.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.I_SWAP</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.I_WIDE.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.I_WIDE</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.ImmediateConstant.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.ImmediateConstant</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.IncrementInstruction.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.IncrementInstruction</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.Index.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.Index</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.InlineAssignInstruction.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.InlineAssignInstruction</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.MultiAssignInstruction.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.MultiAssignInstruction</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.OperatorInstruction.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.OperatorInstruction</a>, <a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.Return.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.Return</a></dd>
</dl>
<hr>
<br>
<pre>public abstract class <span class="strong">Instruction</span>
extends java.lang.Object</pre>
<div class="block">Initially represents a single Java bytecode instruction.
 
 Instructions for each bytecode are created when the bytecode is first scanned.  
 
 Each Instruction will contain a pc (program counter) offset from the beginning of the sequence of bytecode and the length will be determined by the information gleaned from InstructionSet.BYTECODE.</div>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>gfrost</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#addBranchTarget(com.amd.aparapi.internal.instruction.InstructionSet.Branch)">addBranchTarget</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.Branch.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.Branch</a>&nbsp;_branch)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.Branch.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.Branch</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#asBranch()">asBranch</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#compareTo(com.amd.aparapi.internal.instruction.Instruction)">compareTo</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_other)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#consumesStack()">consumesStack</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.ByteCode.html" title="enum in com.amd.aparapi.internal.instruction">InstructionSet.ByteCode</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getByteCode()">getByteCode</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getFirstChild()">getFirstChild</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.LinkedList&lt;<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.ConditionalBranch.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.ConditionalBranch</a>&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getForwardConditionalBranches()">getForwardConditionalBranches</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.LinkedList&lt;<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.Branch.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.Branch</a>&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getForwardUnconditionalBranches()">getForwardUnconditionalBranches</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getLastChild()">getLastChild</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getLength()">getLength</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/model/MethodModel.html" title="class in com.amd.aparapi.internal.model">MethodModel</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getMethod()">getMethod</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getNextExpr()">getNextExpr</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getNextPC()">getNextPC</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getParentExpr()">getParentExpr</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getPrevExpr()">getPrevExpr</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getPrevPC()">getPrevPC</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getReal()">getReal</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.LinkedList&lt;<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.ConditionalBranch.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.ConditionalBranch</a>&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getReverseConditionalBranches()">getReverseConditionalBranches</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.LinkedList&lt;<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.Branch.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.Branch</a>&gt;</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getReverseUnconditionalBranches()">getReverseUnconditionalBranches</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getRootExpr()">getRootExpr</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getStackConsumeCount()">getStackConsumeCount</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getStackDelta()">getStackDelta</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getStackProduceCount()">getStackProduceCount</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getStartInstruction()">getStartInstruction</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getStartPC()">getStartPC</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#getThisPC()">getThisPC</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#isAfter(com.amd.aparapi.internal.instruction.Instruction)">isAfter</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_other)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#isAfterOrEqual(com.amd.aparapi.internal.instruction.Instruction)">isAfterOrEqual</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_other)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#isBefore(com.amd.aparapi.internal.instruction.Instruction)">isBefore</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_other)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#isBeforeOrEqual(com.amd.aparapi.internal.instruction.Instruction)">isBeforeOrEqual</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_other)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#isBranch()">isBranch</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#isBranchTarget()">isBranchTarget</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#isConditionalBranchTarget()">isConditionalBranchTarget</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#isForwardBranch()">isForwardBranch</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#isForwardBranchTarget()">isForwardBranchTarget</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#isForwardConditionalBranchTarget()">isForwardConditionalBranchTarget</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#isForwardUnconditionalBranchTarget()">isForwardUnconditionalBranchTarget</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#isReverseBranchTarget()">isReverseBranchTarget</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#isReverseConditionalBranchTarget()">isReverseConditionalBranchTarget</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#isReverseUnconditionalBranchTarget()">isReverseUnconditionalBranchTarget</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#isUnconditionalBranchTarget()">isUnconditionalBranchTarget</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#producesStack()">producesStack</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#removeBranchTarget(com.amd.aparapi.internal.instruction.InstructionSet.Branch)">removeBranchTarget</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.Branch.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.Branch</a>&nbsp;_branch)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#sameAs(com.amd.aparapi.internal.instruction.Instruction)">sameAs</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_other)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#setChildren(com.amd.aparapi.internal.instruction.Instruction, com.amd.aparapi.internal.instruction.Instruction)">setChildren</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_firstChild,
           <a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_lastChild)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#setLength(int)">setLength</a></strong>(int&nbsp;_length)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#setNextExpr(com.amd.aparapi.internal.instruction.Instruction)">setNextExpr</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_nextExpr)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#setNextPC(com.amd.aparapi.internal.instruction.Instruction)">setNextPC</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_nextByPC)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#setParentExpr(com.amd.aparapi.internal.instruction.Instruction)">setParentExpr</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_parentExpr)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#setPrevExpr(com.amd.aparapi.internal.instruction.Instruction)">setPrevExpr</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_prevExpr)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#setPrevPC(com.amd.aparapi.internal.instruction.Instruction)">setPrevPC</a></strong>(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_prevByPC)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a></code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#toInstruction()">toInstruction</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html#toString()">toString</a></strong>()</code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="setChildren(com.amd.aparapi.internal.instruction.Instruction, com.amd.aparapi.internal.instruction.Instruction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setChildren</h4>
<pre>public&nbsp;void&nbsp;setChildren(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_firstChild,
               <a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_lastChild)</pre>
</li>
</ul>
<a name="getPrevExpr()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPrevExpr</h4>
<pre>public&nbsp;<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;getPrevExpr()</pre>
</li>
</ul>
<a name="getNextExpr()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNextExpr</h4>
<pre>public&nbsp;<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;getNextExpr()</pre>
</li>
</ul>
<a name="setNextPC(com.amd.aparapi.internal.instruction.Instruction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setNextPC</h4>
<pre>public&nbsp;void&nbsp;setNextPC(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_nextByPC)</pre>
</li>
</ul>
<a name="setPrevPC(com.amd.aparapi.internal.instruction.Instruction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPrevPC</h4>
<pre>public&nbsp;void&nbsp;setPrevPC(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_prevByPC)</pre>
</li>
</ul>
<a name="setPrevExpr(com.amd.aparapi.internal.instruction.Instruction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPrevExpr</h4>
<pre>public&nbsp;void&nbsp;setPrevExpr(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_prevExpr)</pre>
</li>
</ul>
<a name="setNextExpr(com.amd.aparapi.internal.instruction.Instruction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setNextExpr</h4>
<pre>public&nbsp;void&nbsp;setNextExpr(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_nextExpr)</pre>
</li>
</ul>
<a name="toInstruction()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toInstruction</h4>
<pre>public&nbsp;<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;toInstruction()</pre>
</li>
</ul>
<a name="getLength()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getLength</h4>
<pre>public&nbsp;int&nbsp;getLength()</pre>
</li>
</ul>
<a name="setLength(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setLength</h4>
<pre>public&nbsp;void&nbsp;setLength(int&nbsp;_length)</pre>
</li>
</ul>
<a name="getByteCode()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getByteCode</h4>
<pre>public final&nbsp;<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.ByteCode.html" title="enum in com.amd.aparapi.internal.instruction">InstructionSet.ByteCode</a>&nbsp;getByteCode()</pre>
</li>
</ul>
<a name="getThisPC()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getThisPC</h4>
<pre>public&nbsp;int&nbsp;getThisPC()</pre>
</li>
</ul>
<a name="getStartPC()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStartPC</h4>
<pre>public&nbsp;int&nbsp;getStartPC()</pre>
</li>
</ul>
<a name="getStackConsumeCount()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStackConsumeCount</h4>
<pre>public&nbsp;int&nbsp;getStackConsumeCount()</pre>
</li>
</ul>
<a name="getStackProduceCount()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStackProduceCount</h4>
<pre>public&nbsp;int&nbsp;getStackProduceCount()</pre>
</li>
</ul>
<a name="getStackDelta()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStackDelta</h4>
<pre>public&nbsp;int&nbsp;getStackDelta()</pre>
</li>
</ul>
<a name="toString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
<dl>
<dt><strong>Overrides:</strong></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
</dl>
</li>
</ul>
<a name="isBranch()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isBranch</h4>
<pre>public&nbsp;boolean&nbsp;isBranch()</pre>
</li>
</ul>
<a name="compareTo(com.amd.aparapi.internal.instruction.Instruction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>compareTo</h4>
<pre>public&nbsp;int&nbsp;compareTo(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_other)</pre>
</li>
</ul>
<a name="isAfter(com.amd.aparapi.internal.instruction.Instruction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isAfter</h4>
<pre>public&nbsp;boolean&nbsp;isAfter(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_other)</pre>
</li>
</ul>
<a name="isAfterOrEqual(com.amd.aparapi.internal.instruction.Instruction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isAfterOrEqual</h4>
<pre>public&nbsp;boolean&nbsp;isAfterOrEqual(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_other)</pre>
</li>
</ul>
<a name="isBefore(com.amd.aparapi.internal.instruction.Instruction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isBefore</h4>
<pre>public&nbsp;boolean&nbsp;isBefore(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_other)</pre>
</li>
</ul>
<a name="isBeforeOrEqual(com.amd.aparapi.internal.instruction.Instruction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isBeforeOrEqual</h4>
<pre>public&nbsp;boolean&nbsp;isBeforeOrEqual(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_other)</pre>
</li>
</ul>
<a name="getFirstChild()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFirstChild</h4>
<pre>public&nbsp;<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;getFirstChild()</pre>
</li>
</ul>
<a name="getLastChild()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getLastChild</h4>
<pre>public&nbsp;<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;getLastChild()</pre>
</li>
</ul>
<a name="getStartInstruction()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStartInstruction</h4>
<pre>public&nbsp;<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;getStartInstruction()</pre>
</li>
</ul>
<a name="getMethod()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMethod</h4>
<pre>public&nbsp;<a href="../../../../../com/amd/aparapi/internal/model/MethodModel.html" title="class in com.amd.aparapi.internal.model">MethodModel</a>&nbsp;getMethod()</pre>
</li>
</ul>
<a name="getNextPC()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNextPC</h4>
<pre>public&nbsp;<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;getNextPC()</pre>
</li>
</ul>
<a name="getPrevPC()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPrevPC</h4>
<pre>public&nbsp;<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;getPrevPC()</pre>
</li>
</ul>
<a name="setParentExpr(com.amd.aparapi.internal.instruction.Instruction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setParentExpr</h4>
<pre>public&nbsp;void&nbsp;setParentExpr(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_parentExpr)</pre>
</li>
</ul>
<a name="getParentExpr()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getParentExpr</h4>
<pre>public&nbsp;<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;getParentExpr()</pre>
</li>
</ul>
<a name="getRootExpr()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRootExpr</h4>
<pre>public&nbsp;<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;getRootExpr()</pre>
</li>
</ul>
<a name="isReverseConditionalBranchTarget()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isReverseConditionalBranchTarget</h4>
<pre>public&nbsp;boolean&nbsp;isReverseConditionalBranchTarget()</pre>
</li>
</ul>
<a name="isForwardConditionalBranchTarget()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isForwardConditionalBranchTarget</h4>
<pre>public&nbsp;boolean&nbsp;isForwardConditionalBranchTarget()</pre>
</li>
</ul>
<a name="isReverseUnconditionalBranchTarget()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isReverseUnconditionalBranchTarget</h4>
<pre>public&nbsp;boolean&nbsp;isReverseUnconditionalBranchTarget()</pre>
</li>
</ul>
<a name="isForwardUnconditionalBranchTarget()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isForwardUnconditionalBranchTarget</h4>
<pre>public&nbsp;boolean&nbsp;isForwardUnconditionalBranchTarget()</pre>
</li>
</ul>
<a name="isReverseBranchTarget()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isReverseBranchTarget</h4>
<pre>public&nbsp;boolean&nbsp;isReverseBranchTarget()</pre>
</li>
</ul>
<a name="isConditionalBranchTarget()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isConditionalBranchTarget</h4>
<pre>public&nbsp;boolean&nbsp;isConditionalBranchTarget()</pre>
</li>
</ul>
<a name="isUnconditionalBranchTarget()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isUnconditionalBranchTarget</h4>
<pre>public&nbsp;boolean&nbsp;isUnconditionalBranchTarget()</pre>
</li>
</ul>
<a name="isForwardBranchTarget()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isForwardBranchTarget</h4>
<pre>public&nbsp;boolean&nbsp;isForwardBranchTarget()</pre>
</li>
</ul>
<a name="isBranchTarget()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isBranchTarget</h4>
<pre>public&nbsp;boolean&nbsp;isBranchTarget()</pre>
</li>
</ul>
<a name="producesStack()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>producesStack</h4>
<pre>public&nbsp;boolean&nbsp;producesStack()</pre>
</li>
</ul>
<a name="getReal()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getReal</h4>
<pre>public&nbsp;<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;getReal()</pre>
</li>
</ul>
<a name="asBranch()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>asBranch</h4>
<pre>public&nbsp;<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.Branch.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.Branch</a>&nbsp;asBranch()</pre>
</li>
</ul>
<a name="consumesStack()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>consumesStack</h4>
<pre>public&nbsp;boolean&nbsp;consumesStack()</pre>
</li>
</ul>
<a name="addBranchTarget(com.amd.aparapi.internal.instruction.InstructionSet.Branch)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addBranchTarget</h4>
<pre>public&nbsp;void&nbsp;addBranchTarget(<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.Branch.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.Branch</a>&nbsp;_branch)</pre>
</li>
</ul>
<a name="removeBranchTarget(com.amd.aparapi.internal.instruction.InstructionSet.Branch)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeBranchTarget</h4>
<pre>public&nbsp;void&nbsp;removeBranchTarget(<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.Branch.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.Branch</a>&nbsp;_branch)</pre>
</li>
</ul>
<a name="getForwardUnconditionalBranches()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getForwardUnconditionalBranches</h4>
<pre>public&nbsp;java.util.LinkedList&lt;<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.Branch.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.Branch</a>&gt;&nbsp;getForwardUnconditionalBranches()</pre>
</li>
</ul>
<a name="getForwardConditionalBranches()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getForwardConditionalBranches</h4>
<pre>public&nbsp;java.util.LinkedList&lt;<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.ConditionalBranch.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.ConditionalBranch</a>&gt;&nbsp;getForwardConditionalBranches()</pre>
</li>
</ul>
<a name="getReverseUnconditionalBranches()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getReverseUnconditionalBranches</h4>
<pre>public&nbsp;java.util.LinkedList&lt;<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.Branch.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.Branch</a>&gt;&nbsp;getReverseUnconditionalBranches()</pre>
</li>
</ul>
<a name="getReverseConditionalBranches()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getReverseConditionalBranches</h4>
<pre>public&nbsp;java.util.LinkedList&lt;<a href="../../../../../com/amd/aparapi/internal/instruction/InstructionSet.ConditionalBranch.html" title="class in com.amd.aparapi.internal.instruction">InstructionSet.ConditionalBranch</a>&gt;&nbsp;getReverseConditionalBranches()</pre>
</li>
</ul>
<a name="isForwardBranch()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isForwardBranch</h4>
<pre>public&nbsp;boolean&nbsp;isForwardBranch()</pre>
</li>
</ul>
<a name="sameAs(com.amd.aparapi.internal.instruction.Instruction)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>sameAs</h4>
<pre>public&nbsp;boolean&nbsp;sameAs(<a href="../../../../../com/amd/aparapi/internal/instruction/Instruction.html" title="class in com.amd.aparapi.internal.instruction">Instruction</a>&nbsp;_other)</pre>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Instruction.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../../../com/amd/aparapi/internal/instruction/ExpressionList.html" title="class in com.amd.aparapi.internal.instruction"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../../../com/amd/aparapi/internal/instruction/InstructionPattern.html" title="class in com.amd.aparapi.internal.instruction"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../index.html?com/amd/aparapi/internal/instruction/Instruction.html" target="_top">Frames</a></li>
<li><a href="Instruction.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
