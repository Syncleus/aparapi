
README 1st
----------

jjmpeg is a Java binding to FFmpeg's very handy decoding and encoding
libraries. It is efficient, works with multiple platforms, and is
simple to port. In addition to an object oriented representation of
the FFmpeg api's it has some higher level objects to make reading and
writing encoded video and audio files almost as easy as ImageIO is for
still images.

jdvb is a sub-project, which provides Java access to the linux dvb
driver (digital tv). It is very much work in progress and incomplete
although one is able to tune a receiver and extract the raw stream
(which in turn can be processed with jjmpeg).

BUILDING
--------

A custom build system based on makefiles is used to build releases and
the native code.  Configuration is mostly stored in native/config.make,
but also scattered through native/*/Makefile, depending on the target.

Some netbeans/ant crap is also present and used for development but
ant is not used to build the distribution.

For extending the binding, see native/README.  Currently the generated
Java file AVAbstract.java must be copied by hand to the src directory
to overwrite the one currently there.

USING
-----

The library native/<platform>/[lib]jjmpeg.[so|dll] must be in the
LD_LIBRARY_PATH or java.library.path to use jjmpeg.

Similarly native/<platform>/libjjdvb.so for using the classes
in jjdvb.

The classes are mostly undocumented but follow the corresponding
api's closely.

It will dlopen libavformat, libavcodec, and libswscale at run-time, so
these must be available on the system - usually in a package such as
ffmpeg-libs.

To test, try running:
  java  -Djava.library.path=path-to-lib-dir -classpath jjmpeg-0.7.0.jar au.notzed.jjmpeg.util.JJFileChooser

 Where path-to-lib-dir is where the .so/.dll files are for your platform.

This should create a file requester which previews videos.

DISTRIBUTING
------------

This library is LGPL3, which has some specific requirements listed
in the license.

Easiest way to adhere to these is to include the full source archive
of the corresponding version with your own distribution.  Note that
the jjmpeg.jar file (not including the native libraries) must be
user-replaceable.

LINKS
-----

jjmpeg is hosted on google code at the following url:
 http://code.google.com/p/jjmpeg

A log of development activity and thoughts:
 http://a-hackers-craic.blogspot.com/search/label/jjmpeg

Cross compiler for windows builds:
 http://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-snapshot/

FFMPEG builds for windows:
 http://ffmpeg.zeranoe.com/builds/

 You need the dev packages to (re)compile the native library, otherwise
 you just need the shared version.

LICENSE
-------

jjmpeg is free software: you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

jjmpeg is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
License for more details.

See the file COPYING.LESSER and COPYING for terms of use.
