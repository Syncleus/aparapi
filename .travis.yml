#    Copyright (c) 2016 - 2017 Syncleus, Inc.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.


language: java

env:
  global:
    # Ubuntu version
    - LINUX_DIST=precise
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
    # OpenCL
    - OPENCL_LIB=default
    - OPENCL_VERSION="10"
    # Khronos OpenCL ICD
    - OPENCL_REGISTRY=https://www.khronos.org/registry/cl
    - OPENCL_ROOT=${DEPS_DIR}/opencl
    # POCL
    - POCL_BRANCH=release_0_13 # branch/tag
    #- POCL_COMMIT= # commit id
    - POCL_LLVM_VERSION=3.8.0
    - POCL_LLVM_CONFIG=${DEPS_DIR}/llvm-${POCL_LLVM_VERSION}/bin/llvm-config
    - POCL_CXX_COMPILER=${DEPS_DIR}/llvm-${POCL_LLVM_VERSION}/bin/clang++
    - POCL_C_COMPILER=${DEPS_DIR}/llvm-${POCL_LLVM_VERSION}/bin/clang
    # AMD APP SDK
    - AMDAPPSDKROOT=${OPENCL_ROOT}/AMDAPPSDK
    # Global build options and C++ flags
    - CMAKE_OPTIONS="-DBOOST_COMPUTE_BUILD_TESTS=ON -DBOOST_COMPUTE_BUILD_EXAMPLES=ON -DBOOST_COMPUTE_BUILD_BENCHMARKS=ON -DBOOST_COMPUTE_USE_OFFLINE_CACHE=ON -DBOOST_COMPUTE_HAVE_OPENCV=ON -DBOOST_COMPUTE_THREAD_SAFE=ON"
    - CXX_FLAGS="-Wall -pedantic -Werror -Wno-variadic-macros -Wno-long-long -Wno-shadow"
    # Boost
    - BOOST_VERSION=default
    # Misc
    - RUN_TESTS=true
    - COVERAGE=true
    - CODACY_PROJECT_TOKEN=e7f8ea58858a4c48b8df6b5443202255

matrix:
  include:
    ############################################################################
    # AMD APP SDK builds (v2.9.1 -> OpenCL 1.2, v3.0 -> OpenCL 2.0)
    ############################################################################
    - os: linux
      sudo: false
      dist: trusty
      compiler: clang
      addons:
        apt:
          packages: &trusty_amdappsdk_packages
            - g++-4.8
      env:
        - LINUX_DIST=trusty
        - OPENCL_LIB=amdappsdk
        - OPENCL_VERSION="20"
        - AMDAPPSDK_VERSION=300 # OpenCL 2.0
        - ENV_CMAKE_OPTIONS="-DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"
    - os: linux
      sudo: flse
      dist: trusty
      compiler: gcc
      addons:
        apt:
          packages: *trusty_amdappsdk_packages
      env:
        - LINUX_DIST=trusty
        - OPENCL_LIB=amdappsdk
        - OPENCL_VERSION="20"
        - AMDAPPSDK_VERSION=300 # OpenCL 2.0
        - ENV_CMAKE_OPTIONS="-DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"
    - os: linux
      sudo: false
      dist: trusty
      compiler: clang
      addons:
       apt:
         packages: *trusty_amdappsdk_packages
      env:
        - OPENCL_LIB=amdappsdk
        - OPENCL_VERSION="12"
        - AMDAPPSDK_VERSION=291 # OpenCL 1.2
        - ENV_CMAKE_OPTIONS="-DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"
    # Build is disabled as it's reduntant with the Coveralls build (see below)
    - os: linux
      sudo: false
      dist: trusty
      compiler: gcc
      addons:
        apt:
          packages: *trusty_amdappsdk_packages
      env:
        - OPENCL_LIB=amdappsdk
        - OPENCL_VERSION="12"
        - AMDAPPSDK_VERSION=291 # OpenCL 1.2
        - ENV_CMAKE_OPTIONS="-DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"

    ############################################################################
    # POCL builds (OpenCL 1.0, 1.1)
    ############################################################################

    # Trusty, OpenCL 1.0
#    - os: linux
#      dist: trusty
#      sudo: required
#      compiler: clang
#      addons:
#        apt:
#          packages: &trusty_pocl_packages
#            - g++-4.8
#            # clang and llvm 3.7 for POCL (llvm-toolchain-trusty-3.7 is not whitelisted)
#            # - clang-3.7
#            # - llvm-3.7
#            # - llvm-3.7-dev (...)
#            # POCL
#            - libltdl-dev
#            - libhwloc-dev
#            - pkg-config
#            - libedit-dev
#            # Boost
#            - libboost-chrono1.55-dev
#            - libboost-date-time1.55-dev
#            - libboost-test1.55-dev
#            - libboost-system1.55-dev
#            - libboost-filesystem1.55-dev
#            - libboost-timer1.55-dev
#            - libboost-program-options1.55-dev
#            - libboost-thread1.55-dev
#            # Misc
#            - python-yaml
#            - lcov
#            - libopencv-dev
#          sources: &trusty_pocl_sources
#            - ubuntu-toolchain-r-test
#      env:
#       - LINUX_DIST=trusty
#       - OPENCL_LIB=pocl
#       - OPENCL_VERSION="10"
#       - ENV_CMAKE_OPTIONS="-DOpenCL_LIBRARY=${OPENCL_ROOT}/pocl/lib/libOpenCL.so -DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"
#    - os: linux
#      dist: trusty
#      sudo: required
#      compiler: gcc
#      addons:
#        apt:
#          packages: *trusty_pocl_packages
##          sources: *trusty_pocl_sources
#      env:
#       - LINUX_DIST=trusty
#       - OPENCL_LIB=pocl
#       - OPENCL_VERSION="10"
#       - ENV_CMAKE_OPTIONS="-DOpenCL_LIBRARY=${OPENCL_ROOT}/pocl/lib/libOpenCL.so -DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"
#    # Trusty, OpenCL 1.1
#    - os: linux
#      dist: trusty
#      sudo: required
#      compiler: clang
#      addons:
#        apt:
#          packages: *trusty_pocl_packages
##          sources: *trusty_pocl_sources
#      env:
#       - LINUX_DIST=trusty
#       - OPENCL_LIB=pocl
#       - OPENCL_VERSION="11"
#       - ENV_CMAKE_OPTIONS="-DOpenCL_LIBRARY=${OPENCL_ROOT}/pocl/lib/libOpenCL.so -DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"
#    - os: linux
#      dist: trusty
#      sudo: required
#      compiler: gcc
#      addons:
#        apt:
#          packages: *trusty_pocl_packages
##          sources: *trusty_pocl_sources
#      env:
#       - LINUX_DIST=trusty
#       - OPENCL_LIB=pocl
#       - OPENCL_VERSION="11"
#       - ENV_CMAKE_OPTIONS="-DOpenCL_LIBRARY=${OPENCL_ROOT}/pocl/lib/libOpenCL.so -DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"

    ############################################################################
    # Khronos ICD builds (without running tests) (OpenCL 1.2, 2.0)
    ############################################################################

     # Precise, OpenCL 1.2, Travis CI container-based infrastructure
#    - os: linux
#      sudo: false
#      compiler: clang
#      addons:
#        apt:
#          packages: &precise_icd_packages
#            - g++
#            # Boost
#            - libboost-chrono1.55-dev
#            - libboost-date-time1.55-dev
#            - libboost-test1.55-dev
#            - libboost-system1.55-dev
#            - libboost-filesystem1.55-dev
#            - libboost-timer1.55-dev
#            - libboost-program-options1.55-dev
#            - libboost-thread1.55-dev
#            # Misc
#            - python-yaml
#            - lcov
#            - libopencv-dev
#          sources: &precise_icd_sources
#            - ubuntu-toolchain-r-test
#            - llvm-toolchain-precise-3.7
#            - boost-latest
#      env:
#        - RUN_TEST=false
#        - OPENCL_LIB=khronos-icd
#        - OPENCL_VERSION="12"
#        - ENV_CMAKE_OPTIONS="-DOpenCL_LIBRARY=${OPENCL_ROOT}/lib/libOpenCL.so -DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"
#    - os: linux
#      sudo: false
#      compiler: gcc
#      addons:
#        apt:
#          packages: *precise_icd_packages
#          sources: *precise_icd_sources
#      env:
#        - RUN_TEST=false
#        - OPENCL_LIB=khronos-icd
#        - OPENCL_VERSION="12"
#        - ENV_CMAKE_OPTIONS="-DOpenCL_LIBRARY=${OPENCL_ROOT}/lib/libOpenCL.so -DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"
#     # Precise, OpenCL 2.0, Travis CI container-based infrastructure
#    - os: linux
#      sudo: false
#      compiler: clang
#      addons:
#        apt:
#           packages: *precise_icd_packages
#           sources: *precise_icd_sources
#      env:
#        - RUN_TEST=false
#        - OPENCL_LIB=khronos-icd
#        - OPENCL_VERSION="20"
#        - ENV_CMAKE_OPTIONS="-DOpenCL_LIBRARY=${OPENCL_ROOT}/lib/libOpenCL.so -DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"
#        - OPENCL_FILE="${OPENCL_ROOT}/lib/libOpenCL.so"
#    - os: linux
#      sudo: false
#      compiler: gcc
#      addons:
#        apt:
#          packages: *precise_icd_packages
#          sources: *precise_icd_sources
#      env:
#        - RUN_TEST=false
#        - OPENCL_LIB=khronos-icd
#        - OPENCL_VERSION="20"
#        - ENV_CMAKE_OPTIONS="-DOpenCL_LIBRARY=${OPENCL_ROOT}/lib/libOpenCL.so -DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"

    ############################################################################
    # AMD APP SDK builds (v2.9.1 -> OpenCL 1.2, v3.0 -> OpenCL 2.0)
    ############################################################################

    # Precise, AMD APP SDK v2.9.1, Travis CI container-based infrastructure
#    - os: linux
#      sudo: false
#      compiler: clang
#      addons:
#       apt:
#         packages: &precise_amdappsdk_packages
#           - g++-4.8
#           # Boost
##           - libboost-chrono1.55-dev
##           - libboost-date-time1.55-dev
##           - libboost-test1.55-dev
##           - libboost-system1.55-dev
##           - libboost-filesystem1.55-dev
##           - libboost-timer1.55-dev
##           - libboost-program-options1.55-dev
##           - libboost-thread1.55-dev
##           # Misc
##           - python-yaml
##           - lcov
##           - libopencv-dev
##         sources: &precise_amdappsdk_sources
##           - ubuntu-toolchain-r-test
##           - boost-latest
#      env:
#        - OPENCL_LIB=amdappsdk
#        - OPENCL_VERSION="12"
#        - AMDAPPSDK_VERSION=291 # OpenCL 1.2
#        - ENV_CMAKE_OPTIONS="-DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"
    # Build is disabled as it's reduntant with the Coveralls build (see below)
    # - os: linux
    #   sudo: false
    #   compiler: gcc
    #   addons:
    #     apt:
    #       packages: *precise_amdappsdk_packages
    #       sources: *precise_amdappsdk_sources
    #   env:
    #     - OPENCL_LIB=amdappsdk
    #     - OPENCL_VERSION="12"
    #     - AMDAPPSDK_VERSION=291 # OpenCL 1.2
    #     - ENV_CMAKE_OPTIONS="-DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"
    # Precise, AMD APP SDK v3.0, OpenCL 2.0, Travis CI container-based infrastructure
#    - os: linux
#      sudo: false
#      compiler: clang
#      addons:
#        apt:
#          packages: *precise_amdappsdk_packages
#          sources: *precise_amdappsdk_sources
#      env:
#        - OPENCL_LIB=amdappsdk
#        - OPENCL_VERSION="20"
#        - AMDAPPSDK_VERSION=300 # OpenCL 2.0
#        - ENV_CMAKE_OPTIONS="-DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"
#    - os: linux
#      sudo: false
#      compiler: gcc
#      addons:
#        apt:
#          packages: *precise_amdappsdk_packages
#          sources: *precise_amdappsdk_sources
#      env:
#        - OPENCL_LIB=amdappsdk
#        - OPENCL_VERSION="20"
#        - AMDAPPSDK_VERSION=300 # OpenCL 2.0
#        - ENV_CMAKE_OPTIONS="-DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"
#    # Coveralls build (-DBOOST_COMPUTE_ENABLE_COVERAGE=ON)
#    # Trusty, AMD APP SDK v2.9.1, OpenCL 1.2
#    - os: linux
#      dist: trusty
#      sudo: required
#      compiler: gcc
#      addons:
#        apt:
#          packages: &trusty_amdappsdk_packages
#            - g++-4.8
#            # Boost
#            - libboost-chrono1.55-dev
#            - libboost-date-time1.55-dev
#            - libboost-test1.55-dev
#            - libboost-system1.55-dev
#            - libboost-filesystem1.55-dev
#            - libboost-timer1.55-dev
#            - libboost-program-options1.55-dev
#            - libboost-thread1.55-dev
#            # Misc
#            - python-yaml
#            - lcov
#            - libopencv-dev
#          sources: &trusty_amdappsdk_sources
#            - ubuntu-toolchain-r-test
#      env:
#        - LINUX_DIST=trusty
#        - OPENCL_LIB=amdappsdk
#        - OPENCL_VERSION="12"
#        - AMDAPPSDK_VERSION=291 # OpenCL 1.2
#        - ENV_CMAKE_OPTIONS="-DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include -DBOOST_COMPUTE_ENABLE_COVERAGE=ON"
#        - COVERAGE=true
#
#    # Latest Boost library builds (currently 1.61)
#    # Precise, AMD APP SDK v2.9.1, Travis CI container-based infrastructure
#    - os: linux
#      sudo: false
#      compiler: clang
#      cache:
#        ccache: true
#        directories:
#          - ${DEPS_DIR}/boost
#      addons:
#       apt:
#         packages: &precise_latest_boost_packages
#           - g++-4.8
#           # Misc
#           - python-yaml
#           - lcov
#           - libopencv-dev
#         sources: &precise_latest_boost_sources
#           - ubuntu-toolchain-r-test
#      env:
#        - OPENCL_LIB=amdappsdk
#        - OPENCL_VERSION="12"
#        - AMDAPPSDK_VERSION=291 # OpenCL 1.2
#        - BOOST_VERSION="1_61_0" # Boost 1.61
#        - BOOST_URL="http://sourceforge.net/projects/boost/files/boost/1.61.0/boost_1_61_0.tar.gz"
#        - ENV_CMAKE_OPTIONS="-DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"
#    - os: linux
#      sudo: false
#      compiler: gcc
#      cache:
#        ccache: true
#        directories:
#          - ${DEPS_DIR}/boost
#      addons:
#        apt:
#          packages: *precise_latest_boost_packages
#          sources: *precise_latest_boost_sources
#      env:
#        - OPENCL_LIB=amdappsdk
#        - OPENCL_VERSION="12"
#        - AMDAPPSDK_VERSION=291 # OpenCL 1.2
#        - BOOST_VERSION="1_61_0" # Boost 1.61
#        - BOOST_URL="http://sourceforge.net/projects/boost/files/boost/1.61.0/boost_1_61_0.tar.gz"
#        - ENV_CMAKE_OPTIONS="-DOpenCL_INCLUDE_DIR=${OPENCL_ROOT}/include"

#    ############################################################################
#    # OSX
#    ############################################################################
#
#    # OSX build
#    - os: osx
#      compiler: clang
#      env:
#        - ENV_CXX_FLAGS="-Wno-c99-extensions"

before_install:
    #install maven 3.5.0
    - export M2_HOME=$HOME/apache-maven-3.5.0
    - if [ ! -d $M2_HOME/bin ]; then curl https://archive.apache.org/dist/maven/maven-3/3.5.0/binaries/apache-maven-3.5.0-bin.tar.gz | tar zxf - -C $HOME; fi
    - export PATH=$M2_HOME/bin:$PATH
    - mvn --version

    # Install dependencies
    - sudo apt-get install jq
    - wget -O ~/codacy-coverage-reporter-assembly-latest.jar $(curl https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r .assets[0].browser_download_url)
    - |
      # POCL dependencies for Trusty
      # llvm-toolchain-trusty-3.7 is not whitelisted yet https://github.com/travis-ci/apt-source-whitelist/issues/199
      if [[ ${LINUX_DIST} == "trusty" && ${OPENCL_LIB} == "pocl" ]]; then
        # see https://github.com/travis-ci/travis-ci/issues/6120
        POCL_LLVM_URL=http://llvm.org/releases/${POCL_LLVM_VERSION}/clang+llvm-${POCL_LLVM_VERSION}-x86_64-linux-gnu-ubuntu-14.04.tar.xz
        mkdir -p ${DEPS_DIR}/llvm-${POCL_LLVM_VERSION}
        travis_retry wget --no-check-certificate --quiet -O llvm-${POCL_LLVM_VERSION}.tar.xz ${POCL_LLVM_URL}
        tar xf llvm-${POCL_LLVM_VERSION}.tar.xz -C ${DEPS_DIR}/llvm-${POCL_LLVM_VERSION} --strip-components 1

        #sudo add-apt-repository -y "deb http://llvm.org/apt/trusty/ llvm-toolchain-trusty-3.7 main"
        #travis_retry wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | travis_retry sudo apt-key add -
        #sudo apt-get update -qq -
        #sudo apt-get install -qq -y clang-3.7 libclang-common-3.7-dev libclang-3.7-dev libclang1-3.7 libllvm3.7 lldb-3.7 llvm-3.7 llvm-3.7-dev llvm-3.7-runtime clang-modernize-3.7 clang-format-3.7 lldb-3.7-dev
      # OSX
      elif [[ ${TRAVIS_OS_NAME} == "osx" ]]; then
        brew update
        brew outdated boost || brew upgrade boost
        brew outdated cmake || brew upgrade cmake
        brew install lcov homebrew/science/opencv
      fi
    - gem install coveralls-lcov
    - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8" CC="gcc-4.8"; fi

    # Combine global build options with OS/compiler-dependent options
    - export CMAKE_OPTIONS=${CMAKE_OPTIONS}" "${ENV_CMAKE_OPTIONS}
    - export CXX_FLAGS=${CXX_FLAGS}" "${ENV_CXX_FLAGS}

install:
    # Download and install recent cmake
    - |
      if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
        CMAKE_URL="http://www.cmake.org/files/v3.4/cmake-3.4.3-Linux-x86_64.tar.gz"
        mkdir -p ${DEPS_DIR}/cmake
        travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${DEPS_DIR}/cmake
        export PATH=${DEPS_DIR}/cmake/bin:${PATH}
      fi

    ############################################################################
    # Download OpenCL headers (and cl.hpp)
    ############################################################################
    - |
      if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
        mkdir -p ${OPENCL_ROOT}/include/CL
        pushd ${OPENCL_ROOT}/include/CL
        travis_retry git clone --depth 1 https://github.com/KhronosGroup/OpenCL-Headers.git -b opencl${OPENCL_VERSION}
        mv ./OpenCL-Headers/* .
        travis_retry wget -w 1 -np -nd -nv -A h,hpp --no-check-certificate ${OPENCL_REGISTRY}/api/2.1/cl.hpp;
        popd
      fi

    ############################################################################
    # Build and install POCL https://github.com/pocl/pocl
    ############################################################################
    - |
      if [[ ${TRAVIS_OS_NAME} == "linux" && ${OPENCL_LIB} == "pocl" ]]; then
        travis_retry git clone --depth 1 https://github.com/pocl/pocl.git -b ${POCL_BRANCH}
        cd pocl
        if [[ -n "${POCL_COMMIT}" ]]; then
          git checkout ${POCL_COMMIT}
        fi
        mkdir build
        cd build
        cmake -DDIRECT_LINKAGE=ON -DENABLE_ICD=OFF -DCMAKE_C_COMPILER=${POCL_C_COMPILER} -DCMAKE_CXX_COMPILER=${POCL_CXX_COMPILER} -DWITH_LLVM_CONFIG=${POCL_LLVM_CONFIG} -DCMAKE_INSTALL_PREFIX=${OPENCL_ROOT}/pocl/ ..
        make install
        cd ../..
      fi

    ############################################################################
    # fglrx does not work: https://github.com/travis-ci/travis-ci/issues/5221,
    # so we build our own linkable .so file.
    # Thanks to clSPARSE for providing opencl-icd build script.
    ############################################################################
    - |
      if [[ ${TRAVIS_OS_NAME} == "linux" && ${OPENCL_LIB} == "khronos-icd" ]]; then
        mkdir -p ${OPENCL_ROOT}
        pushd ${OPENCL_ROOT}
        travis_retry git clone --depth 1 https://github.com/KhronosGroup/OpenCL-ICD-Loader.git
        mv ./OpenCL-ICD-Loader/* .
        mkdir -p inc/CL
        pushd inc/CL
        travis_retry git clone --depth 1 https://github.com/KhronosGroup/OpenCL-Headers.git
        mv ./OpenCL-Headers/* .
        popd
        mkdir -p lib
        pushd lib
        cmake -G "Unix Makefiles" ..
        make
        cp ./bin/libOpenCL.so .
        popd
        popd
      fi

    ############################################################################
    # Install AMD APP SDK
    # Thanks to JuliaGPU https://github.com/JuliaGPU/OpenCL.jl
    ############################################################################
    - |
      if [[ ${TRAVIS_OS_NAME} == "linux" && ${OPENCL_LIB} == "amdappsdk" ]]; then
        mkdir -p ${OPENCL_ROOT}
        bash .travis/amd_sdk.sh ${AMDAPPSDK_VERSION}
        tar -xjf AMD-SDK.tar.bz2
        export OPENCL_VENDOR_PATH=${AMDAPPSDKROOT}/etc/OpenCL/vendors
        mkdir -p ${OPENCL_VENDOR_PATH}
        sh AMD-APP-SDK*.sh --tar -xf -C ${AMDAPPSDKROOT}
        echo libamdocl64.so > ${OPENCL_VENDOR_PATH}/amdocl64.icd
        if [[ ${AMDAPPSDK_VERSION} == "300" ]]; then
          export LD_LIBRARY_PATH=${AMDAPPSDKROOT}/lib/x86_64/sdk:${LD_LIBRARY_PATH}
          export CMAKE_LIBRARY_PATH=${AMDAPPSDKROOT}/lib/x86_64/sdk
          cp ${AMDAPPSDKROOT}/lib/x86_64/libamdocl12cl64.so ${AMDAPPSDKROOT}/lib/x86_64/sdk/libamdocl12cl64.so
        # 291
        else
          export LD_LIBRARY_PATH=${AMDAPPSDKROOT}/lib/x86_64:${LD_LIBRARY_PATH}
          export CMAKE_LIBRARY_PATH=${AMDAPPSDKROOT}/lib/x86_64
        fi
        chmod +x ${AMDAPPSDKROOT}/bin/x86_64/clinfo
        ${AMDAPPSDKROOT}/bin/x86_64/clinfo
      fi

after_success:
  - bash <(curl -s https://codecov.io/bash)
  - mvn site
  - java -cp ~/codacy-coverage-reporter-assembly-latest.jar com.codacy.CodacyCoverageReporter -l Java -r target/site/jacoco/jacoco.xml

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/9923372173dc2b2a0bb4
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always
